# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET		/documentation	controllers.Default.redirect(to = "/docs/")
GET     /docs/             controllers.Assets.at(path="/public/swagger-ui",file="index.html")
GET     /docs/swagger.json  		controllers.ApiHelpController.getResources
GET     /docs/*file         controllers.Assets.at(path="/public/swagger-ui",file)


# An example controller showing how to use dependency injection
GET     /nlp/htmlToText/:input              controllers.NLPController.htmlToText(input: String)
GET     /nlp/detectLanguage/:input         controllers.NLPController.detectLanguage(input: String)
GET     /nlp/tokenize/:input              controllers.NLPController.tokenize(input: String, lang: String)
#GET     /nlp/nlp/:input              controllers.NLPController.performNLP(input: String)
GET     /nlp/dbpediaspotlight/:input              controllers.NLPController.dbpediaSpotlight(input: String, confidence: Double, types: String)
GET     /nlp/nlpForDeck/:deckId              controllers.NLPController.performNlpForDeck(deckId: String, dbpediaSpotlightConfidenceForSlide: Double, dbpediaSpotlightConfidenceForDeck: Double)
GET     /nlp/tagRecommendations/:deckId              controllers.NLPController.tagRecommendations(deckId: String, performTitleBoost: Boolean, titleBoostWithFixedFactor: Integer, titleBoostlimitToFrequencyOfMostFrequentWord: Boolean, minFrequencyOfTermOrEntityToBeConsidered: Integer, minCharLengthForTag: Integer, maxNumberOfWordsForNEsWhenNoLinkAvailable: Integer, maxEntriesToReturnTagRecommendation: Integer )
GET     /nlp/deckRecommendationBackgroundInfo/:deckId              controllers.NLPController.deckRecommendationBackgroundInfo(deckId: String, maxTermsToConsider: Integer, performTitleBoost: Boolean, titleBoostWithFixedFactor: Integer, titleBoostlimitToFrequencyOfMostFrequentWord: Boolean, minFrequencyOfTermOrEntityToBeConsidered: Integer, minCharLengthForTag: Integer, maxNumberOfWords: Integer, tfidfMinDocsToPerformLanguageDependent: Integer)
GET     /nlp/deckSimilarity/              controllers.NLPController.deckSimilarity(deckId1: String, deckId2: String, maxTermsToConsider: Integer, performTitleBoost: Boolean, titleBoostWithFixedFactor: Integer, titleBoostlimitToFrequencyOfMostFrequentWord: Boolean, minFrequencyOfTermOrEntityToBeConsidered: Integer, minCharLengthForTag: Integer, maxNumberOfWords: Integer, tfidfMinDocsToPerformLanguageDependent: Integer)
GET     /nlp/deckSimilarityExtendedInfo/              controllers.NLPController.deckSimilarityExtendedInfo(deckId1: String, deckId2: String, maxTermsToConsider: Integer, performTitleBoost: Boolean, titleBoostWithFixedFactor: Integer, titleBoostlimitToFrequencyOfMostFrequentWord: Boolean, minFrequencyOfTermOrEntityToBeConsidered: Integer, minCharLengthForTag: Integer, maxNumberOfWords: Integer, tfidfMinDocsToPerformLanguageDependent: Integer)



# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
